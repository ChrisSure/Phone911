<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp2.1</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>

    <!-- Set this to true if you enable server-side prerendering -->
    <BuildServerSideRenderer>false</BuildServerSideRenderer>
    <RootNamespace>Phone</RootNamespace>
    <UserSecretsId>24c84f60-0fc8-4d90-a478-f4311905e4c3</UserSecretsId>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="AutoMapper" Version="8.1.0" />
    <PackageReference Include="Microsoft.AspNetCore.App" />
    <PackageReference Include="Microsoft.AspNetCore.Razor.Design" Version="2.1.2" PrivateAssets="All" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="2.1.1" />
    <PackageReference Include="Swashbuckle.AspNetCore" Version="4.0.1" />
    <PackageReference Include="Swashbuckle.AspNetCore.SwaggerUI" Version="4.0.1" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="ClientApp\src\app\app-routing.module.ts" />
    <None Remove="ClientApp\src\app\globals.ts" />
    <None Remove="ClientApp\src\app\models\catalog\dto\order-seller.ts" />
    <None Remove="ClientApp\src\app\models\catalog\dto\product.ts" />
    <None Remove="ClientApp\src\app\models\catalog\dto\products-order.ts" />
    <None Remove="ClientApp\src\app\models\shop\shop.ts" />
    <None Remove="ClientApp\src\app\models\user\dto\profile-seller-change.ts" />
    <None Remove="ClientApp\src\app\models\user\dto\user-email.ts" />
    <None Remove="ClientApp\src\app\models\user\dto\user-new-password.ts" />
    <None Remove="ClientApp\src\app\models\user\dto\User.ts" />
    <None Remove="ClientApp\src\app\models\user\profile.ts" />
    <None Remove="ClientApp\src\app\seller\change-email\change-email.component.ts" />
    <None Remove="ClientApp\src\app\seller\change-password\change-password.component.ts" />
    <None Remove="ClientApp\src\app\seller\change-profile\change-profile.component.ts" />
    <None Remove="ClientApp\src\app\seller\home\seller-home.component.ts" />
    <None Remove="ClientApp\src\app\seller\seller-panel.component.ts" />
    <None Remove="ClientApp\src\app\seller\seller-routing.module.ts" />
    <None Remove="ClientApp\src\app\seller\seller.guard.ts" />
    <None Remove="ClientApp\src\app\seller\seller.module.ts" />
    <None Remove="ClientApp\src\app\seller\statistic\statistic.component.ts" />
    <None Remove="ClientApp\src\app\services\catalog\order.service.ts" />
    <None Remove="ClientApp\src\app\services\catalog\product.service.ts" />
    <None Remove="ClientApp\src\app\services\shop\shop.service.ts" />
    <None Remove="ClientApp\src\app\services\user\profile.service.ts" />
    <None Remove="ClientApp\src\app\services\user\token.interceptor.ts" />
    <None Remove="ClientApp\src\app\services\user\user.service.ts" />
    <None Remove="ClientApp\src\app\site\error\error.component.ts" />
    <None Remove="ClientApp\src\app\site\login\login.component.ts" />
    <None Remove="ClientApp\src\app\models\jwt-token.ts" />
    <None Remove="ClientApp\src\app\services\auth.service.ts" />
    <None Remove="ClientApp\src\app\services\token.service.ts" />
    <None Remove="ClientApp\src\app\services\user-info.service.ts" />
    <None Remove="ClientApp\src\app\site\site.module.ts" />
    <None Remove="Data\StoredProcedures\Category\Create.sql" />
    <None Remove="Data\StoredProcedures\Category\Delete.sql" />
    <None Remove="Data\StoredProcedures\Category\ListShop.sql" />
    <None Remove="Data\StoredProcedures\Category\SortDown.sql" />
    <None Remove="Data\StoredProcedures\Category\SortUp.sql" />
    <None Remove="Data\StoredProcedures\Category\Update.sql" />
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Include="Data\StoredProcedures\Category\Create.sql" />
    <EmbeddedResource Include="Data\StoredProcedures\Category\Delete.sql" />
    <EmbeddedResource Include="Data\StoredProcedures\Category\ListShop.sql" />
    <EmbeddedResource Include="Data\StoredProcedures\Category\SortDown.sql" />
    <EmbeddedResource Include="Data\StoredProcedures\Category\SortUp.sql" />
    <EmbeddedResource Include="Data\StoredProcedures\Category\Update.sql" />
  </ItemGroup>

  <ItemGroup>
    <TypeScriptCompile Include="ClientApp\src\app\app-routing.module.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\globals.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\models\catalog\dto\order-seller.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\models\catalog\dto\product.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\models\catalog\dto\products-order.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\models\shop\shop.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\models\user\dto\profile-seller-change.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\models\user\dto\user-email.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\models\user\dto\user-new-password.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\models\user\dto\user.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\models\user\profile.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\seller\change-email\change-email.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\seller\change-password\change-password.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\seller\change-profile\change-profile.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\seller\home\seller-home.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\seller\seller-panel\seller-panel.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\seller\seller-routing.module.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\seller\seller.guard.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\seller\seller.module.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\seller\statistic\statistic.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\services\catalog\order.service.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\services\catalog\product.service.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\services\shop\shop.service.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\services\user\profile.service.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\services\user\token.interceptor.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\services\user\user.service.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\site\error\error.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\site\login\login.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\models\user\jwt-token.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\services\user\auth.service.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\services\user\token.service.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\services\user\user-info.service.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\site\site.module.ts" />
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --prod" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr -- --prod" Condition=" '$(BuildServerSideRenderer)' == 'true' " />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
      <DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

</Project>
